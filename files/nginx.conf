
user nginx;
worker_processes 4;
pid /run/nginx.pid;
daemon off;
error_log /DATA/logs/error.log warn;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100m;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

      
        #a new log format for detecting bad bots.
  		log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';

  		 ## This log format makes it so we can see real requester's IP address \
		  ##    not just the reverse proxy server's IP address. Also note, that \
		  ##    "specialLog" can be replaced with any name you would like to \
		  ##    give to this log format.
		 log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
		                        '"$request" $status $body_bytes_sent '
		                        '"$http_referer" "$http_user_agent"';

	        server {
	        listen 80;
	        
	        root /usr/share/icingaweb2/public; #Path of icinga2 web directory
			index index.php;
			access_log /var/log/nginx/access.log; 
			error_log /var/log/nginx/error.log;

			location = /favicon.ico {
			  log_not_found off;
			  access_log off;
			  expires max;
			}
			  location ~ /\. {
			    deny all;
			    access_log off;
			    log_not_found off;
			  }

			  location ~ \..*/.*\.php$ {
			    return 403;
			  }

			  if (!-d $request_filename) {
			    rewrite ^/(.+)/$ /$1 permanent;
			  }

			  location / {
			    try_files $1 $uri $uri/ /index.php$is_args$args;
			  }


	        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
			  location ~ ^/index\.php(.*)$ {
			    fastcgi_index index.php;
			    include /etc/nginx/fastcgi_params;
			    try_files $uri =404;
			    fastcgi_split_path_info ^(.+\.php)(/.+)$;
			    fastcgi_pass 127.0.0.1:9000;
			    fastcgi_param SCRIPT_FILENAME /usr/share/icingaweb2/public/index.php; #Replace with icinga2 web index.php file path.
			    fastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2; 
			    fastcgi_param REMOTE_USER $remote_user;
			  }


		    ## Block SQL injections
		    location ~* union.*select.*\( { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* union.*all.*select.* { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* concat.*\( { access_log /DATA/logs/blocked.log blocked; deny all; }
		    
		    ## Block common exploits
		    location ~* (<|%3C).*script.*(>|%3E) { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* base64_(en|de)code\(.*\) { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* (%24&x) { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* (%0|%A|%B|%C|%D|%E|%F|127\.0) { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* \.\.\/  { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* ~$ { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* proc/self/environ { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* /\.(htaccess|htpasswd|svn) { access_log /DATA/logs/blocked.log blocked; deny all; }
		    
		    ## Block file injections
		    location ~* [a-zA-Z0-9_]=(\.\.//?)+ { access_log /DATA/logs/blocked.log blocked; deny all; }
		    location ~* [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ { access_log /DATA/logs/blocked.log blocked; deny all; }
		    


		}


}
